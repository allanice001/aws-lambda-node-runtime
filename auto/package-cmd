#!/bin/sh

set -ex

DIR="$( cd "$( dirname "$0" )" && pwd )"

cd "${DIR}/.."

tmp_dir="tmp"
stage_dir="stage/work/"
node_dir="${tmp_dir}/${NODE_VERSION}"
node_archive="node-v${NODE_VERSION}-linux-x64.tar.xz"

if [ ! -f "${tmp_dir}/${node_archive}" ]; then
  mkdir -p "${tmp_dir}"
  curl -L -o "${tmp_dir}/${node_archive}" "https://nodejs.org/dist/v${NODE_VERSION}/${node_archive}"
fi

#check sha256
echo "${SHA256} ${tmp_dir}/${node_archive}" | sha256sum -c -

#unpack node
rm -rf "${node_dir}"
mkdir -p "${node_dir}"
tar -xJ -f "${tmp_dir}/${node_archive}" --strip 1 -C "${node_dir}"

#prepare staging dir
rm -rf "${stage_dir}"
mkdir -p "${stage_dir}"
cp -a tsconfig.json package.json package-lock.json src/bootstrap src/ "${node_dir}"/bin/node "${stage_dir}"

#compile typescript
cd "${stage_dir}"
npm ci
npm run compile

#install deps and create archive
npm ci --production
rm -rf src/ package-lock.json package.json tsconfig.json
mv dist/compile/* .
rm -rf dist/
rm -f ../layer.zip
7za a -mx9 -r ../layer.zip .
